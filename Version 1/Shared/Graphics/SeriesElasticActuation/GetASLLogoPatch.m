% *************************************************************************
%
% function [f, v, c] = GetASLLogoPatch()
% 
% Returns faces, vertices, and color-values (one per face) that represent a
% patch of the ASL-Logo.  
% 
% The logo has height 1, width 1, and length 2.8700
%
% Input:  - none
%
% Output: - faces 'f', vertices 'v', and color values 'c' as used in the
%           'patch' function
%
% Created by C. David Remy on 03/14/2011
% MATLAB 2010a
%
% Documentation:
%  'A MATLAB Framework For Gait Creation', 2011, C. David Remy (1), Keith
%  Buffinton (2), and Roland Siegwart (1),  International Conference on
%  Intelligent Robots and Systems, September 25-30, San Francisco, USA 
%
% (1) Autonomous Systems Lab, Institute of Robotics and Intelligent Systems, 
%     Swiss Federal Institute of Technology (ETHZ) 
%     Tannenstr. 3 / CLA-E-32.1
%     8092 Zurich, Switzerland  
%     cremy@ethz.ch; rsiegwart@ethz.ch
%
% (2) Department of Mechanical Engineering, 
%     Bucknell University
%     701 Moore Avenue
%     Lewisburg, PA-17837, USA
%     buffintk@bucknell.edu
%
%   See also GETMAINBODYMONOPEDPATCH, PATCH.
%
function [f, v, c] = GetASLLogoPatch()
    % Polygon objects (as exported from CAD):
    ASLlines = {
    ([49.9254,37.4737;
    49.9254,37.4737;
    55.3366,37.4737;
    55.3366,37.4737;
    55.3366,33.6521;
    55.3366,33.6521;
    49.9254,33.6521;
    49.9254,33.6521;
    49.9254,37.4737;
    49.9254,37.4737] - repmat([17.7383,30.1663],10,1))*diag([1/(44.29340000000001-30.1663),1/(44.29340000000001-30.1663)]);
    ([49.7417,33.2167;
    49.7417,33.2167;
    52.14080000000001,33.0018;
    52.14080000000001,33.0018;
    50.6951,30.4371;
    50.6951,30.4371;
    49.7417,33.2167;
    49.7417,33.2167] - repmat([17.7383,30.1663],8,1))*diag([1/(44.29340000000001-30.1663),1/(44.29340000000001-30.1663)]);
    ([53.0598,33.019;
    53.0598,33.019;
    55.4598,33.2239;
    55.4598,33.2239;
    54.4814,30.4472;
    54.4814,30.4472;
    53.0598,33.019;
    53.0598,33.019] - repmat([17.7383,30.1663],8,1))*diag([1/(44.29340000000001-30.1663),1/(44.29340000000001-30.1663)]);
    ([41.2869,30.1663;
    41.2869,30.1663;
    41.2869,36.85910000000001;
    41.2869,36.85910000000001;
    46.0137,36.85910000000001;
    46.0137,36.85910000000001;
    46.0137,30.1663;
    46.0137,30.1663;
    41.2869,30.1663;
    41.2869,30.1663] - repmat([17.7383,30.1663],10,1))*diag([1/(44.29340000000001-30.1663),1/(44.29340000000001-30.1663)]);
    ([29.2929,34.9401;
    29.2929,34.9401;
    35.9857,34.9401;
    35.9857,34.9401;
    35.9857,30.2133;
    35.9857,30.2133;
    29.2929,30.2133;
    29.2929,30.2133;
    29.2929,34.9401;
    29.2929,34.9401] - repmat([17.7383,30.1663],10,1))*diag([1/(44.29340000000001-30.1663),1/(44.29340000000001-30.1663)]);
    ([17.7383,38.09690000000001;
    17.7383,38.09690000000001;
    24.4311,38.09690000000001;
    24.4311,38.09690000000001;
    24.4311,33.3701;
    24.4311,33.3701;
    17.7383,33.3701;
    17.7383,33.3701;
    17.7383,38.09690000000001;
    17.7383,38.09690000000001] - repmat([17.7383,30.1663],10,1))*diag([1/(44.29340000000001-30.1663),1/(44.29340000000001-30.1663)]);
    ([22.7457,41.7716;
    22.7457,41.7716;
    22.7395,38.7923;
    22.7395,38.7923;
    19.4236,40.2972;
    19.4236,40.2972;
    22.7457,41.7716;
    22.7457,41.7716] - repmat([17.7383,30.1663],8,1))*diag([1/(44.29340000000001-30.1663),1/(44.29340000000001-30.1663)]);
    ([32.3096,38.6157;
    32.3096,38.6157;
    32.3034,35.6364;
    32.3034,35.6364;
    28.9875,37.1413;
    28.9875,37.1413;
    32.3096,38.6157;
    32.3096,38.6157] - repmat([17.7383,30.1663],8,1))*diag([1/(44.29340000000001-30.1663),1/(44.29340000000001-30.1663)]);
    ([46.7396,44.29340000000001;
    46.7396,44.29340000000001;
    48.8419,42.18230000000001;
    48.8419,42.18230000000001;
    45.433,40.90170000000001;
    45.433,40.90170000000001;
    46.7396,44.29340000000001;
    46.7396,44.29340000000001] - repmat([17.7383,30.1663],8,1))*diag([1/(44.29340000000001-30.1663),1/(44.29340000000001-30.1663)]);
    };
    
    % Circle centers:
    circles = ([56.8862,37.61;
    34.1658,37.12600000000001;
    43.6503,38.9823;
    19.4237,31.3225;
    22.978,31.3225]- repmat([17.7383,30.1663],5,1))*diag([1/(44.29340000000001-30.1663),1/(44.29340000000001-30.1663)]);

    % Radius of the circular objects
    r = 1.397/(44.29340000000001-30.1663);

    % Create cylinders    
    [x,y] = cylinder([0;ones(4,1)*r;0],20);
    z = repmat([0,0,0,1,1,1]',1,21);
    [f,v] = surf2patch(x,y,z,z);
    v = TransformVertices(v,eye(3),[circles(1,1),circles(1,2),0]);
    c = ones(length(f),3)*0.0;
    for i = 2:5
        [x,y] = cylinder([0;ones(4,1)*r;0],20);
        z = repmat([0,0,0,1,1,1]',1,21);
        [f1,v1] = surf2patch(x,y,z,z);
        v1 = TransformVertices(v1,eye(3),[circles(i,1),circles(i,2),0]);
        c1 = ones(length(f1),3)*0.0;
        [v,f,c]=AddPatchesWithColor(v,f,c,v1,f1,c1);
    end
    
    % Polyeders:
    for i = 1:9
        v1 = [[ASLlines{i};ASLlines{i};ASLlines{i};ASLlines{i}],[zeros(length(ASLlines{i}),1);zeros(length(ASLlines{i}),1);ones(length(ASLlines{i}),1);ones(length(ASLlines{i}),1)]];
        if length(ASLlines{i}) == 10 % rectangle
            f1 = [[1,3,5,7];
                  repmat([1,2,10+2,10+1]+11,4,1)+repmat((0:2:6)',1,4);
                  [31,33,35,37]];
        else % triangle
            f1 = [[1,3,5,5];
                  repmat([1,2,8+2,8+1]+9,3,1)+repmat((0:2:4)',1,4);
                  [25,27,29,29]];
        end
        c1 = ones(length(f1),3)*0.0;
        [v,f,c]=AddPatchesWithColor(v,f,c,v1,f1,c1);
    end
end
% *************************************************************************
% *************************************************************************